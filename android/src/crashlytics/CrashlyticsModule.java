/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package crashlytics;

import android.app.Activity;

import com.crashlytics.android.Crashlytics;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

@Kroll.module(name="CrashlyticsModule", id="crashlytics")
public class CrashlyticsModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "[CrashlyticsModule]";
	private static final boolean DBG = TiConfig.LOGD;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public CrashlyticsModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
	}

  // final DeviceInfo deviceInfo = new DeviceInfo(this);
  // Crashlytics.setString("device_id", deviceInfo.getDeviceId());
  // Crashlytics.setString("device_name", deviceInfo.getDeviceName());
  // Crashlytics.setString("brand", deviceInfo.getBrand());
  // Crashlytics.setString("board", deviceInfo.getBoard());
  // Crashlytics.setString("manufacturer", deviceInfo.getManufacturer());
  // Crashlytics.setString("model", deviceInfo.getModel());
  // Crashlytics.setString("product", deviceInfo.getProduct());
  // Crashlytics.setString("cpu_abi", StringUtils.join(deviceInfo.getCpuABIs(), "; "));
  // Crashlytics.setString("cpu_info", deviceInfo.getCpuInfo());

	//
	// Methods
	//

	@Kroll.method
	public void start()
	{
		TiApplication appContext = TiApplication.getInstance();
		// Activity activity = appContext.getCurrentActivity();

		try{

			// Try to start crashlytics
			Crashlytics.start(appContext);

    } catch(Exception e) { // or your specific exception

    	Log.d(LCAT, "Unable to start Crashlytics");
		  Log.e(LCAT, "Failed to start with error:", e);
		  Log.d(LCAT, "Done printing error");
    }
	}

	@Kroll.method
	public void setString(String[] args)
	{
		String key = args[1];
		String value = args[0];

		try{

			// Try to set the string
			Crashlytics.setString(key, value);
			Log.d(LCAT, "Set string '"+value+"' for key '"+key+"'");

    } catch(Exception e) { // or your specific exception

    	Log.d(LCAT, "Unable to setString");

    }
	}
}